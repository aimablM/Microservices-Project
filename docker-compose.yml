version: '3.8'

services:
  # Authentication Service
  secureauth:
    build:
      context: ./secureauth
      dockerfile: Dockerfile
    container_name: secureauth
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://auth-db:27017/auth-service
      - JWT_SECRET=your_secure_jwt_secret_here
    depends_on:
      - auth-db
    networks:
      - microservices-network

  # Task Manager Service  
  task-manager-service:
    build:
      context: ./task-manager-service
      dockerfile: Dockerfile
    container_name: task-manager-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://task-db:27017/task-manager
      - JWT_SECRET=your_secure_jwt_secret_here
      - AUTH_SERVICE_URL=http://secureauth:3000/api/auth
    depends_on:
      - task-db
      - secureauth
    networks:
      - microservices-network

  # Authentication Client
  auth-client:
    build:
      context: ./auth-client
      dockerfile: Dockerfile
    container_name: auth-client
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - secureauth
    networks:
      - microservices-network

  # Task Manager Client
  task-manager-client:
    build:
      context: ./task-manager-client
      dockerfile: Dockerfile
    container_name: task-manager-client
    restart: unless-stopped
    ports:
      - "8081:80"
    depends_on:
      - task-manager-service
    networks:
      - microservices-network

  # MongoDB for Authentication Service
  auth-db:
    image: mongo:latest
    container_name: auth-db
    restart: unless-stopped
    volumes:
      - auth-db-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - microservices-network

  # MongoDB for Task Manager Service
  task-db:
    image: mongo:latest
    container_name: task-db
    restart: unless-stopped
    volumes:
      - task-db-data:/data/db
    ports:
      - "27018:27017" # Map to a different host port to avoid conflicts
    networks:
      - microservices-network

  # API Gateway / Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - secureauth
      - task-manager-service
      - auth-client
      - task-manager-client
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  auth-db-data:
    driver: local
  task-db-data:
    driver: local